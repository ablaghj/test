<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>fr.hm.acdc-demat</groupId>
		<artifactId>acdc-demat-batch</artifactId>
		<version>1.0.1-snapshot</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>acdc-demat-back-app</artifactId>
	<packaging>jar</packaging>
	<description>Module batch du projet acdc-demat.</description>

	<properties>
		<!-- surefire -->
		<surefire.outputDir>${project.build.directory}/surefire-reports</surefire.outputDir>
		<!-- jacoco -->
		<jacoco.out.ut.file>jacoco.exec</jacoco.out.ut.file>
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<jacoco.outputDir>${project.build.directory}/jacoco</jacoco.outputDir>
		<!-- sonar -->
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
		<mhm-eservices.version>1.1.55</mhm-eservices.version>
		<spring.version>3.1.0.RELEASE</spring.version>
		<jaxws-tools.version>2.2.10</jaxws-tools.version>
	</properties>

    <dependencyManagement>
        <dependencies>
            <!-- Lock de la version pour le WARN BATCH-2161 -->
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-integration</artifactId>
                <version>3.0.9.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-core</artifactId>
                <version>3.0.9.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.batch</groupId>
                <artifactId>spring-batch-infrastructure</artifactId>
                <version>3.0.9.RELEASE</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

	<dependencies>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>fr.hm.fwk</groupId>
			<artifactId>fwk-spring-hm-api</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.hm.fwk</groupId>
			<artifactId>fwk-spring-hm-batch</artifactId>
		</dependency>
		<!-- Jackson Mapper ASL -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.sonar-plugins.java</groupId>
			<artifactId>sonar-jacoco-listeners</artifactId>
			<version>3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>fr.sihm.mhm-eservices</groupId>
			<artifactId>mhm-eservices</artifactId>
			<version>${mhm-eservices.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.6</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<!-- jaxws-tools dependence necessaire a mhm-eservices -->
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-tools</artifactId>
			<version>${jaxws-tools.version}</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/configuration.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>int</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/configuration_tar.xml</descriptor>
							</descriptors>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>liv</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/configuration_tar.xml</descriptor>
							</descriptors>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>install</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
					<include>*.txt</include>
					<include>**/*.csv</include>
                    <include>**/*.json</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>${basedir}/target/${project.artifactId}-${project.version}/extra-resources</directory>
				<includes>
					<include>*.xml</include>
					<include>*.properties</include>
					<include>*.txt</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<!-- jar plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestEntries>
							<Implementation-Title>${project.parent.artifactId}</Implementation-Title>
							<Implementation-Version>${project.parent.version}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- surefire plugin Utilisé pour lancer les tests unitaires et exclure 
				les tests d'intégration. Ils seront lancés par le plugin failsafe -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<argLine>-Xmx1G -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC
						-XX:+CMSClassUnloadingEnabled ${jacoco.agent.ut.arg}</argLine>
					<excludes>
						<exclude>**/*IT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- failsafe plugin: Utilisé pour les tests d'intégration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<reportsDirectory>${surefire.outputDir}</reportsDirectory>
					<argLine>-Xmx1G -XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC
						-XX:+CMSClassUnloadingEnabled ${jacoco.agent.it.arg}</argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- plugin jacoco: Utilisé pour produire les rapports d'analyse de code 
				pour Sonar -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.9</version>
				<executions>
					<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-ut-agent</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<propertyName>jacoco.agent.ut.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
						to be passed to the JVM hosting the code being tested. -->
					<execution>
						<id>prepare-it-agent</id>
						<!-- moved to package phase to be sure all pre-integration test have 
							it already set to bring up environments with jacoco agent as JVM params -->
						<phase>package</phase>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>jacoco.agent.it.arg</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.13.2</version>
				<executions>
					<execution>
						<id>schema1-generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaDirectory>${project.basedir}/src/main/resources/xsd/</schemaDirectory>
							<bindingDirectory>${project.basedir}/src/main/java/model/binding</bindingDirectory>
							<schemaIncludes>
								<include>xchange.bpm.xsd</include>
							</schemaIncludes>
							<bindingIncludes>jaxb-binding_donneesro.xjb</bindingIncludes>
							<generatePackage>fr.sihm.batch.model.ribxml</generatePackage>
							<forceRegenerate>true</forceRegenerate>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
